Hashtable
==========

Implementations (integer dictionary):

```
public class HashMap {
    private final static int TABLE_SIZE = 128;
    HashEntry[] table;
    HashMap() {
        table = new HashEntry[TABLE_SIZE];
        for (int i = 0; i < TABLE_SIZE; i++)
            table[i] = null;
    }

    public int get(int key) {
        int hash = (key % TABLE_SIZE);
        while (table[hash] != null && table[hash].key != key)
            hash = (hash + 1) % TABLE_SIZE;

        return (table[hash] == null) ? return -1 : return table[hash].value;
    }

    public void put(int key, int value) {
        int hash = (key % TABLE_SIZE);
        while (table[hash] != null && table[hash].key != key)
            hash = (hash + 1) % TABLE_SIZE;
            table[hash] = new HashEntry(key, value);
    }

    static class HashEntry{
        int key;
        int value;
        public HashEntry(int key, int value){
            this.key = key;
            this.value = value;
        }
    }
}

```

Operations:
- search(D, k): Given a key k, return a pointer to the element in the dictionary D whose key value is k, if one exists